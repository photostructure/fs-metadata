name: Build

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:
    inputs:
      version:
        description: "Version bump type"
        required: true
        type: choice
        options:
          - patch
          - minor
          - major
        default: "minor"

jobs:
  test-matrix:
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, macos-14]
        node-version: [18.x, 20.x, 22.x, 23.x]

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"

      - run: npm ci
      - run: npm run prebuild
      - run: npm run tests

      - name: Upload prebuilds
        if: ${{ matrix.node-version == '18.x' }} && ${{ github.event_name == 'workflow_dispatch' }}
        uses: actions/upload-artifact@v4
        with:
          name: prebuilds-${{ matrix.os }}
          path: prebuilds/

  test-debian:
    strategy:
      fail-fast: false
      matrix:
        arch: [x64, arm64]
        node-version: [18.x, 20.x, 22.x, 23.x]
    runs-on: ubuntu-latest
    container: node:18
    steps:
      - name: Setup QEMU
        if: ${{ matrix.arch == 'arm64' }}
        uses: docker/setup-qemu-action@v3
        with:
          platforms: linux/${{ matrix.arch }}
      - run: apt-get update && apt-get install -y libglib2.0-dev libblkid-dev uuid-dev
      - uses: actions/checkout@v4
      - run: npm ci
      - run: npm run prebuild
      - run: npm run tests
      - name: Upload prebuilds
        if: ${{ matrix.node-version == '18.x' }} && ${{ github.event_name == 'workflow_dispatch' }}
        uses: actions/upload-artifact@v4
        with:
          name: prebuilds-${{ matrix.os }}-${{ matrix.arch }}-glibc
          path: prebuilds/

  test-alpine:
    strategy:
      fail-fast: false
      matrix:
        arch: [x64, arm64]
        node-version: [18.x, 20.x, 22.x, 23.x]
    runs-on: ubuntu-latest
    container: node:18-alpine
    steps:
      - name: Setup QEMU
        if: ${{ matrix.arch == 'arm64' }}
        uses: docker/setup-qemu-action@v3
        with:
          platforms: linux/${{ matrix.arch }}
      - run: apk add build-base git python3 py3-setuptools util-linux-dev --update-cache
      - uses: actions/checkout@v4
      - run: npm ci
      - run: npm run prebuild
      - run: npm run tests
      - name: Upload prebuilds
        if: ${{ matrix.node-version == '18.x' }} && ${{ github.event_name == 'workflow_dispatch' }}
        uses: actions/upload-artifact@v4
        with:
          name: prebuilds-${{ matrix.os }}-${{ matrix.arch }}-musl
          path: prebuilds/

  publish:
    if: ${{ github.event_name == 'workflow_dispatch' }}
    runs-on: ubuntu-latest
    needs: [test-matrix, test-debian, test-alpine]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: "18.x"

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./prebuilds
          merge-multiple: true # < because prebuilds/linux-x64/ will contain both a glibc and musl build

      - name: Configure git for publishing
        run: |
          git config user.name "${GITHUB_ACTOR}"
          git config user.email "${GITHUB_ACTOR}@users.noreply.github.com"

      - name: Configure npm for publishing
        run: echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" > ~/.npmrc

      - name: Publish to npm
        run: npm run release -- --ci ${{ github.event.inputs.version }}
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Remove npm token
        run: rm ~/.npmrc
