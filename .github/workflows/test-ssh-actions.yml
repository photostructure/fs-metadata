name: Test SSH Actions

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - ".github/workflows/test-ssh-actions.yml"
      - ".github/actions/setup-ssh-bot/**"
      - ".github/actions/cleanup-ssh-bot/**"

jobs:
  test-ssh-signing:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: ./.github/actions/setup-ssh-bot
        with:
          ssh-signing-key: ${{ secrets.SSH_SIGNING_KEY }}
          git-user-name: ${{ secrets.GIT_USER_NAME }}
          git-user-email: ${{ secrets.GIT_USER_EMAIL }}

      - name: Test SSH setup
        run: |
          set -x
          echo "=== Testing SSH signing functionality ==="
          
          # Verify git configuration
          echo -e "\n=== Git configuration ==="
          git config --get user.name
          git config --get user.email
          git config --get gpg.format
          git config --get user.signingkey
          git config --get commit.gpgsign
          git config --get tag.gpgsign
          
          # Test git commit signing
          echo -e "\n=== Testing git commit signing ==="
          TEST_FILE="test-ssh-actions-${{ github.run_id }}.txt"
          echo "Test file - $(date)" > "$TEST_FILE"
          git add "$TEST_FILE"
          git commit -m "test: validate SSH actions - $(date)"
          
          # Verify the commit was signed
          echo -e "\n=== Verifying commit signature ==="
          git log --show-signature -1
          
          # Test tag signing
          echo -e "\n=== Testing git tag signing ==="
          TEST_TAG="v0.0.1-ssh-test-$(date +%s)"
          git tag -s "$TEST_TAG" -m "test tag using SSH actions"
          
          # Verify tag signature
          echo -e "\n=== Verifying tag signature ==="
          git tag -v "$TEST_TAG" 2>&1 || echo "Note: SSH signatures may show differently than GPG"
          
          # Test npm version (like in build.yml)
          echo -e "\n=== Testing npm version with SSH signing ==="
          
          # Create a test package.json
          mkdir -p test-npm-version-ssh
          cat > test-npm-version-ssh/package.json << EOF
          {
            "name": "test-ssh-actions",
            "version": "1.0.0"
          }
          EOF
          
          # Change to test directory and run npm version
          cd test-npm-version-ssh
          npm version patch --message "test: npm version with SSH actions %s"
          
          # Verify the version commit was signed
          echo -e "\n=== Verifying npm version commit signature ==="
          git log --show-signature -1
          
          # List all tags created during test
          echo -e "\n=== All test tags ==="
          git tag --list | grep test || true
          
          echo -e "\n=== All tests passed! ✓ ==="

      - uses: ./.github/actions/cleanup-ssh-bot
        if: always()

      - name: Verify cleanup
        if: always()
        run: |
          echo "=== Verifying SSH cleanup ==="
          
          # Check if SSH keys were removed
          if [ -f ~/.ssh/signing_key ] || [ -f ~/.ssh/signing_key.pub ]; then
            echo "WARNING: SSH signing keys still present after cleanup"
            ls -la ~/.ssh/signing_key* || true
          else
            echo "✓ SSH signing keys removed"
          fi
          
          # Check if allowed signers was removed
          if [ -f ~/.ssh/allowed_signers ]; then
            echo "WARNING: allowed_signers file still exists"
          else
            echo "✓ allowed_signers file removed"
          fi
          
          # Check git configuration
          if git config --get gpg.format 2>/dev/null | grep -q "ssh"; then
            echo "WARNING: Git still configured for SSH signing"
          else
            echo "✓ Git SSH signing configuration removed"
          fi