name: Test GPG Signing Fix

on:
  workflow_dispatch:

jobs:
  test-gpg-signing-fix:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
      
      - name: Import GPG key for signed commits
        uses: crazy-max/ghaction-import-gpg@v6
        with:
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.GPG_PASSPHRASE }}
          fingerprint: ${{ secrets.GPG_FINGERPRINT }}
          git_config_global: true
          git_user_signingkey: true
          git_commit_gpgsign: true
          git_tag_gpgsign: true

      - name: Configure git
        run: |
          git config user.name "${{ secrets.GIT_USER_NAME }}"
          git config user.email "${{ secrets.GIT_USER_EMAIL }}"

      - name: Fix GPG Agent Configuration
        run: |
          # Set GPG_TTY for terminal access
          export GPG_TTY=$(tty)
          
          # Remove potentially broken config files
          rm -f ~/.gnupg/gpg-agent.conf
          rm -f ~/.gnupg/gpg.conf
          
          # Create minimal working configuration
          echo "default-cache-ttl 7200" > ~/.gnupg/gpg-agent.conf
          echo "max-cache-ttl 86400" >> ~/.gnupg/gpg-agent.conf
          echo "allow-loopback-pinentry" >> ~/.gnupg/gpg-agent.conf
          
          echo "use-agent" > ~/.gnupg/gpg.conf
          echo "pinentry-mode loopback" >> ~/.gnupg/gpg.conf
          echo "no-tty" >> ~/.gnupg/gpg.conf
          
          # Kill any existing gpg-agent
          gpgconf --kill gpg-agent || true
          
          # Start fresh gpg-agent
          gpg-agent --daemon --allow-loopback-pinentry || true
          
          # Test if GPG agent is working
          echo "Testing GPG agent configuration..."
          gpg-agent --gpgconf-test || echo "GPG agent test failed, but continuing..."

      - name: Test GPG signing
        run: |
          # Set GPG_TTY for terminal access
          export GPG_TTY=$(tty)
          
          # Create unique test directory for this run
          TEST_DIR="test-gpg-$(date +%s)-$$"
          mkdir "$TEST_DIR"
          cd "$TEST_DIR"
          
          # Test direct GPG signing
          echo "Testing direct GPG signing..."
          echo "test message $(date)" | gpg --batch --yes --pinentry-mode loopback --clearsign
          
          # Test git commit signing
          echo "Testing git commit signing..."
          git init
          git config user.name "${{ secrets.GIT_USER_NAME }}"
          git config user.email "${{ secrets.GIT_USER_EMAIL }}"
          echo "# Test file for GPG verification - $(date)" > test-file.md
          git add test-file.md
          git commit -m "test: GPG signing verification $(date)"
          
          # Verify the commit was signed
          echo "Verifying commit signature..."
          git log --show-signature -1
          
          # Test npm version (without actually changing version)
          echo "Testing npm version command..."
          echo "{\"name\":\"test-gpg-$(date +%s)\",\"version\":\"0.0.1\"}" > package.json
          npm version patch --message "test: version bump %s - $(date)"
          
          # Verify the version commit was signed
          echo "Verifying npm version commit signature..."
          git log --show-signature -1
          
          # Cleanup
          cd ..
          rm -rf "$TEST_DIR"
          
          echo "All GPG signing tests successful!"