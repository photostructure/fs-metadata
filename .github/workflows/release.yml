name: Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version bump type'
        required: true
        type: choice
        options:
          - patch
          - minor
          - major
        default: 'minor'

jobs:
  build:
    name: Prebuild on ${{ matrix.os }} (${{ matrix.arch }})
    runs-on: ${{ matrix.runs-on }}
    strategy:
      fail-fast: false
      matrix:
        include:
          # Ubuntu x64 build
          - os: ubuntu-latest
            runs-on: ubuntu-latest
            node: 20.x
            arch: x64

          # Ubuntu arm64 build
          - os: ubuntu-22.04-arm64
            runs-on: ubuntu-22.04-arm64
            node: 20.x
            arch: arm64

          # Windows x64 build
          - os: windows-latest
            runs-on: windows-latest
            node: 20.x
            arch: x64

          # macOS x64 build
          - os: macos-13
            runs-on: macos-13
            node: 20.x
            arch: x64

          # macOS arm64 build
          - os: macos-13
            runs-on: macos-13
            node: 20.x
            arch: arm64

          # Alpine x64 build
          - os: ubuntu-latest
            runs-on: ubuntu-latest
            node: 20.x
            arch: x64
            platform: alpine

          # Alpine arm64 build
          - os: ubuntu-22.04-arm64
            runs-on: ubuntu-22.04-arm64
            node: 20.x
            arch: arm64
            platform: alpine

    steps:
      - uses: actions/checkout@v4

      - name: Set platform
        id: platform
        shell: bash
        run: |
          if [ "${{ matrix.platform }}" == "alpine" ]; then
            echo "platform=linux-musl" >> $GITHUB_OUTPUT
          else
            case "${{ matrix.os }}" in
              ubuntu-*)
                echo "platform=linux" >> $GITHUB_OUTPUT
                ;;
              windows-*)
                echo "platform=win32" >> $GITHUB_OUTPUT
                ;;
              macos-*)
                echo "platform=darwin" >> $GITHUB_OUTPUT
                ;;
            esac
          fi

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
          architecture: ${{ matrix.arch }}

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: prebuilds

      - name: Install dependencies
        run: npm ci

      - name: Git configuration
        run: |
          git config user.name "${{ github.actor }}"
          git config user.email "${{ github.actor }}@users.noreply.github.com"

      - name: NPM configuration
        run: |
          npm config set //registry.npmjs.org/:_authToken $NPM_TOKEN
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Publish to npm
        run: npm run release --ci -- ${{ github.event.inputs.version }}
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
