name: Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version bump type'
        required: true
        type: choice
        options:
          - patch
          - minor
          - major
        default: 'minor'

jobs:
  build:
    name: Prebuild on ${{ matrix.os }} (${{ matrix.arch }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        # See https://github.com/actions/runner-images?tab=readme-ov-file#available-images
        # and https://github.com/actions/runner-images/issues/8439
        
        include:
          # Ubuntu builds
          - os: ubuntu-latest
            node: 20.x
            arch: x64
          - os: ubuntu-latest
            node: 20.x
            arch: arm64
            
          # Windows builds  
          - os: windows-latest
            node: 20.x
            arch: x64
          - os: windows-latest
            node: 20.x
            arch: arm64
            
          # macOS builds
          - os: macos-14
            node: 20.x
            arch: x64
          - os: macos-14
            node: 20.x
            arch: arm64
            
          # Alpine builds
          - os: ubuntu-latest
            node: 20.x
            arch: x64
            platform: alpine
          - os: ubuntu-latest
            node: 20.x
            arch: arm64
            platform: alpine

    steps:
      - uses: actions/checkout@v4

      - name: Set up QEMU
        if: matrix.arch == 'arm64'
        uses: docker/setup-qemu-action@v3
        with:
          platforms: arm64

      - name: Set platform
        id: platform
        shell: bash
        run: |
          case "${{ matrix.os }}" in
            ubuntu-latest)
              echo "platform=linux" >> $GITHUB_OUTPUT
              ;;
            windows-*)
              echo "platform=win32" >> $GITHUB_OUTPUT
              ;;
            macos-*)
              echo "platform=darwin" >> $GITHUB_OUTPUT
              ;;
            alpine-latest)
              echo "platform=linux-musl" >> $GITHUB_OUTPUT
              ;;
          esac

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
          architecture: ${{ matrix.arch }}

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: prebuilds

      - name: Install dependencies
        run: npm ci
        
      - name: git config
        run: |
          git config user.name "${GITHUB_ACTOR}"
          git config user.email "${GITHUB_ACTOR}@users.noreply.github.com"
        
      - name: npm config
        run: |
          npm config set //registry.npmjs.org/:_authToken $NPM_TOKEN
        env:
          NPM_TOKEN: ${{secrets.NPM_TOKEN}}

      - name: Publish to npm
        run: npm run release --ci -- ${{ github.event.inputs.bump }}
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}