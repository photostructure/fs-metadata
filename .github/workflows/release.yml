name: Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version bump type'
        required: true
        type: choice
        options:
          - patch
          - minor
          - major
        default: 'minor'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-13, windows-latest]
        arch: [x64, arm64]
        include:
          - os: ubuntu-latest
            arch: x64
            platform: linux
            libc: glibc
          - os: ubuntu-latest
            arch: arm64
            platform: linux
            libc: glibc
          - os: macos-13
            arch: x64
            platform: darwin
            libc: default
          - os: macos-13
            arch: arm64
            platform: darwin
            libc: default
          - os: windows-latest
            arch: x64
            platform: win32
            libc: default
          - os: windows-latest
            arch: arm64
            platform: win32
            libc: default
          - os: ubuntu-latest
            arch: x64
            platform: linux
            libc: musl
          - os: ubuntu-latest
            arch: arm64
            platform: linux
            libc: musl

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'

      - name: Install dependencies
        run: npm install

      - name: Build prebuilt binaries
        run: |
          if [ "${{ matrix.libc }}" == "musl" ]; then
            docker run --rm \
              -v ${{ github.workspace }}:/workspace \
              -w /workspace \
              prebuild/alpine \
              npx prebuildify --napi --platform ${{ matrix.platform }} --arch ${{ matrix.arch }} --tag-libc musl
          else
            npx prebuildify --napi --platform ${{ matrix.platform }} --arch ${{ matrix.arch }}
          fi
        env:
          PREBUILD_ARCH: ${{ matrix.arch }}
          PREBUILD_PLATFORM: ${{ matrix.platform }}
          PREBUILD_LIBC: ${{ matrix.libc }}

      - name: Upload prebuilt binaries
        uses: actions/upload-artifact@v4
        with:
          name: prebuilds-${{ matrix.os }}-${{ matrix.arch }}-${{ matrix.libc }}
          path: prebuilds/
  publish:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./prebuilds

      - name: Configure npm for publishing
        run: |
          echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" > ~/.npmrc

      - name: Publish package to npm
        run: npm publish --access public
        
      - name: Remove npm token
        run: rm ~/.npmrc
