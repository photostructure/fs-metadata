---
# Windows-specific clang-tidy configuration
# Inherits from parent .clang-tidy and adds Windows-specific checks

InheritParentConfig: true

Checks: >
  bugprone-*,
  clang-analyzer-*,
  performance-*,
  misc-unused-parameters,
  modernize-use-nullptr,
  -bugprone-easily-swappable-parameters,
  -bugprone-exception-escape,
  -bugprone-casting-through-void,
  -bugprone-assignment-in-if-condition,
  -clang-analyzer-valist.Uninitialized,
  -readability-identifier-naming,
  -cppcoreguidelines-macro-usage,
  -clang-analyzer-core.CallAndMessage,
  -clang-analyzer-core.NonNullParamChecker,
  -clang-analyzer-core.uninitialized.*,
  -clang-analyzer-cplusplus.Move,
  -clang-analyzer-optin.cplusplus.*,
  -modernize-use-trailing-return-type,
  -modernize-concat-nested-namespaces,
  readability-redundant-smartptr-get,
  readability-misleading-indentation,
  readability-non-const-parameter,
  readability-isolate-declaration,
  readability-implicit-bool-conversion,
  readability-braces-around-statements,
  cppcoreguidelines-init-variables,
  cppcoreguidelines-no-malloc,
  cppcoreguidelines-prefer-member-initializer,
  cppcoreguidelines-special-member-functions,
  cppcoreguidelines-pro-type-member-init,
  cppcoreguidelines-pro-bounds-pointer-arithmetic,
  cppcoreguidelines-owning-memory,
  modernize-use-override,
  modernize-use-using,
  modernize-use-default-member-init,
  modernize-loop-convert,
  modernize-make-unique,
  modernize-make-shared,
  modernize-pass-by-value,
  modernize-return-braced-init-list,
  cert-err52-cpp,
  cert-err60-cpp,
  cert-err34-c,
  cert-dcl50-cpp,
  cert-dcl58-cpp,
  cert-mem57-cpp,
  cert-msc50-cpp,
  cert-msc51-cpp,
  bugprone-use-after-move,
  bugprone-unused-raii,
  bugprone-dangling-handle,
  bugprone-bad-signal-to-kill-thread,
  bugprone-fold-init-type,
  bugprone-inaccurate-erase,
  bugprone-incorrect-roundings,
  bugprone-macro-parentheses,
  bugprone-sizeof-container,
  bugprone-sizeof-expression,
  bugprone-string-constructor,
  bugprone-string-integer-assignment,
  bugprone-string-literal-with-embedded-nul,
  bugprone-suspicious-enum-usage,
  bugprone-suspicious-memset-usage,
  bugprone-suspicious-missing-comma,
  bugprone-swapped-arguments,
  bugprone-terminating-continue,
  bugprone-throw-keyword-missing,
  clang-analyzer-cplusplus.NewDeleteLeaks,
  clang-analyzer-windows.*,
  clang-analyzer-security.*,
  clang-analyzer-deadcode.DeadStores,
  misc-non-copyable-objects,
  misc-throw-by-value-catch-by-reference,
  misc-no-recursion,
  misc-redundant-expression,
  misc-static-assert,
  performance-unnecessary-value-param,
  performance-inefficient-string-concatenation,
  performance-inefficient-vector-operation,
  performance-move-constructor-init,
  performance-noexcept-destructor,
  performance-noexcept-move-constructor,
  performance-trivially-destructible,
  readability-container-size-empty,
  hicpp-exception-baseclass,
  hicpp-signed-bitwise,
  hicpp-move-const-arg,
  hicpp-no-assembler,
  concurrency-mt-unsafe,
  bugprone-misplaced-widening-cast,
  bugprone-not-null-terminated-result,
  bugprone-suspicious-string-compare,
  cert-str34-c

WarningsAsErrors: >
  bugprone-unused-raii,
  clang-analyzer-cplusplus.NewDeleteLeaks,
  clang-analyzer-windows.*,
  bugprone-use-after-move

HeaderFilterRegex: '^((?!/usr/include/)(?!C:\\\\Program Files)(?!C:\\\\Users\\\\.*\\\\AppData).)*$'
FormatStyle: none
SystemHeaders: false

# Note: DiagnosticsFilter is not supported in older clang-tidy versions
# Instead, we disable problematic checks directly in the Checks list above

CheckOptions:
  - key: performance-move-const-arg.CheckTriviallyCopyableMove
    value: false
  - key: cppcoreguidelines-special-member-functions.AllowSoleDefaultDtor
    value: true
  - key: modernize-use-override.IgnoreDestructors
    value: false
  - key: cert-str34-c.DiagnoseSignedUnsignedCharComparisons
    value: true
  - key: bugprone-misplaced-widening-cast.CheckImplicitCasts
    value: true
  - key: readability-redundant-smartptr-get.IgnoreMacros
    value: false
  - key: readability-braces-around-statements.ShortStatementLines
    value: "1"
  - key: readability-implicit-bool-conversion.AllowIntegerConditions
    value: true
  - key: readability-implicit-bool-conversion.AllowPointerConditions
    value: true
  - key: modernize-loop-convert.MinConfidence
    value: reasonable
  - key: modernize-pass-by-value.IncludeStyle
    value: google
  - key: performance-inefficient-string-concatenation.StrictMode
    value: false
  - key: performance-move-constructor-init.IncludeStyle
    value: google
  - key: cppcoreguidelines-pro-bounds-pointer-arithmetic.IgnoreArraySubscripts
    value: true
  - key: misc-no-recursion.Enable
    value: true
  - key: concurrency-mt-unsafe.FunctionSet
    value: posix