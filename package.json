{
  "name": "@photostructure/fs-metadata",
  "version": "0.4.0",
  "description": "Cross-platform native filesystem metadata retrieval for Node.js",
  "homepage": "https://photostructure.github.io/fs-metadata/",
  "types": "./dist/index.d.ts",
  "main": "./dist/index.cjs",
  "module": "./dist/index.mjs",
  "exports": {
    ".": {
      "require": {
        "types": "./dist/index.d.cts",
        "default": "./dist/index.cjs"
      },
      "import": {
        "types": "./dist/index.d.ts",
        "default": "./dist/index.mjs"
      }
    },
    "./package.json": "./package.json"
  },
  "repository": {
    "type": "git",
    "url": "git+ssh://git@github.com/photostructure/fs-metadata.git"
  },
  "license": "MIT",
  "scripts": {
    "install": "node-gyp-build",
    "clean": "run-p clean:*",
    "clean:dist": "del-cli coverage dist docs \"*.tsbuildinfo\"",
    "clean:gyp-cache": "del-cli --force build %USERPROFILE%/.node-gyp ~/.node-gyp",
    "clean:gyp": "node-gyp clean",
    "node-gyp-rebuild": "node-gyp rebuild",
    "configure": "node scripts/configure.mjs",
    "prebuildify": "prebuildify --napi --tag-libc --strip",
    "prebuild": "run-s configure prebuildify",
    "// clang-tidy": "on ubuntu: `sudo apt install clang-tidy`, on mac: `brew install llvm && alias clang-tidy=$(brew --prefix llvm)/bin/clang-tidy`. Note that there will be warnings for non-platform-relevant files.",
    "clang-tidy": "node scripts/is-platform.mjs win32 || (npm run configure && bear -- npm run node-gyp-rebuild && find src -name '*.cpp' -o -name '*.h' | grep -E '\\.(cpp|h)$' | grep -v -E '(windows|darwin)/' | xargs clang-tidy)",
    "clang-tidy:simple": "node-gyp configure -- -f compile_commands_json && clang-tidy -p build/Release src/**/*.cpp",
    "compile": "tsc -p tsconfig.build.json --noEmit",
    "bundle": "tsup && node scripts/post-build.mjs",
    "docs": "typedoc --tsconfig tsconfig.base.json --out docs src/index.ts",
    "// tests": "`compile` validates the typescript compiles with tsc. `lint` checks for style issues. `test:*` runs the tests directly from TypeScript source.",
    "// test": "support `npm t name_of_file` (and don't fail due to missing coverage)",
    "test": "npm run test:cjs -- --no-coverage",
    "tests": "run-s compile lint test:* tests:memory",
    "tests:memory": "node scripts/check-memory.mjs",
    "test:cjs": "cross-env TEST_ESM=0 jest",
    "test:esm": "cross-env TEST_ESM=1 node --experimental-vm-modules --no-warnings node_modules/jest/bin/jest.js",
    "test:memory": "cross-env TEST_MEMORY=1 TEST_ESM=1 node --expose-gc --experimental-vm-modules --no-warnings node_modules/jest/bin/jest.js --no-coverage src/memory.test.ts",
    "asan": "cross-env ENABLE_ASAN=1 node scripts/check-memory.mjs",
    "lint": "eslint",
    "lint:fix": "eslint --fix",
    "snyk": "snyk code test",
    "fmt": "run-p fmt:*",
    "// fmt:cpp": "on ubuntu: `sudo apt install clang-format`",
    "fmt:cpp": "clang-format --style=LLVM -i src/*.cpp src/*/*.cpp src/*/*.h || true",
    "fmt:js": "prettier --write \"scripts/**/*.?js\" \"*.?js\"",
    "fmt:json": "prettier --write \"**/*.json\"",
    "fmt:pkg": "npm pkg fix",
    "fmt:ts": "prettier --write \"**/*.(c|m)?ts\"",
    "precommit": "run-s fmt clean clang-tidy prebuild tests",
    "build": "npm run bundle",
    "prepare-release": "npm run build",
    "release": "release-it"
  },
  "gypfile": true,
  "publishConfig": {
    "access": "public"
  },
  "engines": {
    "node": ">=20.0.0"
  },
  "os": [
    "darwin",
    "linux",
    "win32"
  ],
  "cpu": [
    "x64",
    "arm64"
  ],
  "keywords": [
    "filesystem",
    "metadata",
    "native",
    "node-addon",
    "windows",
    "linux",
    "macos",
    "cross-platform"
  ],
  "dependencies": {
    "node-addon-api": "^8.3.1",
    "node-gyp-build": "^4.8.4"
  },
  "devDependencies": {
    "@eslint/js": "^9.28.0",
    "@types/jest": "^29.5.14",
    "@types/node": "^22.15.29",
    "@typescript-eslint/eslint-plugin": "^8.33.0",
    "@typescript-eslint/parser": "^8.33.0",
    "cross-env": "^7.0.3",
    "del-cli": "^6.0.0",
    "eslint": "^9.28.0",
    "eslint-plugin-regexp": "^2.7.0",
    "globals": "^16.2.0",
    "jest": "^29.7.0",
    "jest-environment-node": "^29.7.0",
    "jest-extended": "^5.0.3",
    "node-gyp": "^11.2.0",
    "npm-run-all": "4.1.5",
    "prebuildify": "^6.0.1",
    "prettier": "^3.5.3",
    "prettier-plugin-organize-imports": "4.1.0",
    "release-it": "^19.0.3",
    "snyk": "^1.1297.1",
    "terser": "^5.40.0",
    "ts-jest": "^29.3.4",
    "tsup": "^8.5.0",
    "tsx": "^4.19.4",
    "typedoc": "^0.28.5",
    "typescript": "^5.8.3",
    "typescript-eslint": "^8.33.0"
  }
}
