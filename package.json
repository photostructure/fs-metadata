{
  "name": "@photostructure/fs-metadata",
  "version": "0.6.1",
  "description": "Cross-platform native filesystem metadata retrieval for Node.js",
  "homepage": "https://photostructure.github.io/fs-metadata/",
  "types": "./dist/index.d.ts",
  "main": "./dist/index.cjs",
  "module": "./dist/index.mjs",
  "exports": {
    ".": {
      "require": {
        "types": "./dist/index.d.cts",
        "default": "./dist/index.cjs"
      },
      "import": {
        "types": "./dist/index.d.ts",
        "default": "./dist/index.mjs"
      }
    },
    "./package.json": "./package.json"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/photostructure/fs-metadata.git"
  },
  "license": "MIT",
  "scripts": {
    "install": "node scripts/install.cjs",
    "clean": "run-p clean:*",
    "clean:dist": "del-cli coverage dist docs \"*.tsbuildinfo\"",
    "clean:gyp-cache": "del-cli --force build %USERPROFILE%/.node-gyp ~/.node-gyp",
    "clean:native": "node-gyp clean",
    "node-gyp-rebuild": "node-gyp rebuild",
    "setup:native": "node scripts/setup-native.mjs",
    "build": "run-s setup:native build:native build:dist",
    "build:native": "npm run setup:native && tsx scripts/prebuildify-wrapper.ts",
    "build:linux-glibc": "bash scripts/prebuild-linux-glibc.sh",
    "build:dist": "tsup && node scripts/post-build.mjs",
    "docs": "typedoc",
    "// test": "support `npm t name_of_file` (and don't fail due to missing coverage)",
    "test": "npm run test:cjs -- --no-coverage",
    "tests": "run-s test:*",
    "test:cjs": "cross-env TEST_ESM=0 jest",
    "test:esm": "cross-env TEST_ESM=1 node --experimental-vm-modules --no-warnings node_modules/jest/bin/jest.js",
    "check:memory": "tsx scripts/check-memory.ts",
    "lint": "run-s lint:*",
    "lint:native": "tsx scripts/clang-tidy.ts",
    "lint:tsc": "tsc --noEmit",
    "lint:eslint": "eslint",
    "snyk": "snyk code test",
    "fmt": "run-p fmt:*",
    "// fmt:cpp": "on ubuntu: `sudo apt install clang-format`. Note that windows emits `invalid format` with this || true approach, but it works and is better than introducing Yet Another Script Script (like scripts/clang-format.mjs).",
    "fmt:cpp": "clang-format --style=LLVM -i src/*.cpp src/*/*.cpp src/*/*.h || echo \"\"",
    "fmt:js": "prettier --write \"scripts/**/*.?js\" \"*.?js\"",
    "fmt:json": "prettier --write \"**/*.json\"",
    "fmt:md": "prettier --write \"**/*.md\"",
    "fmt:pkg": "npm pkg fix",
    "fmt:ts": "prettier --write \"**/*.(c|m)?ts\"",
    "// precommit": "should be manually run by developers before they run `git commit`",
    "precommit": "npx --yes tsx scripts/precommit.ts",
    "prepare-release": "npm run build:dist"
  },
  "gypfile": true,
  "publishConfig": {
    "access": "public"
  },
  "engines": {
    "node": ">=20.0.0"
  },
  "os": [
    "darwin",
    "linux",
    "win32"
  ],
  "cpu": [
    "x64",
    "arm64"
  ],
  "keywords": [
    "filesystem",
    "metadata",
    "native",
    "node-addon",
    "windows",
    "linux",
    "macos",
    "cross-platform"
  ],
  "dependencies": {
    "node-addon-api": "^8.4.0",
    "node-gyp-build": "^4.8.4"
  },
  "devDependencies": {
    "@eslint/js": "^9.29.0",
    "@types/jest": "^30.0.0",
    "@types/node": "^24.0.3",
    "@types/semver": "^7.7.0",
    "@typescript-eslint/eslint-plugin": "^8.34.1",
    "@typescript-eslint/parser": "^8.34.1",
    "cross-env": "^7.0.3",
    "del-cli": "^6.0.0",
    "detect-libc": "^2.0.4",
    "eslint": "^9.29.0",
    "eslint-plugin-regexp": "^2.9.0",
    "eslint-plugin-security": "^3.0.1",
    "globals": "^16.2.0",
    "jest": "^30.0.0",
    "jest-environment-node": "^30.0.0",
    "jest-extended": "^6.0.0",
    "node-gyp": "^11.2.0",
    "npm-run-all": "4.1.5",
    "prebuildify": "^6.0.1",
    "prettier": "^3.5.3",
    "prettier-plugin-organize-imports": "4.1.0",
    "snyk": "^1.1297.2",
    "terser": "^5.43.0",
    "ts-jest": "^29.4.0",
    "tsup": "^8.5.0",
    "tsx": "^4.20.3",
    "typedoc": "^0.28.5",
    "typescript": "^5.8.3",
    "typescript-eslint": "^8.34.1"
  }
}
